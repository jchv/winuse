// Code generated by "stringer -type=RM_REBOOT_REASON"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RmRebootReasonNone-0]
	_ = x[RmRebootReasonPermissionDenied-1]
	_ = x[RmRebootReasonSessionMismatch-2]
	_ = x[RmRebootReasonCriticalProcess-4]
	_ = x[RmRebootReasonCriticalService-8]
	_ = x[RmRebootReasonDetectedSelf-16]
}

const (
	_RM_REBOOT_REASON_name_0 = "RmRebootReasonNoneRmRebootReasonPermissionDeniedRmRebootReasonSessionMismatch"
	_RM_REBOOT_REASON_name_1 = "RmRebootReasonCriticalProcess"
	_RM_REBOOT_REASON_name_2 = "RmRebootReasonCriticalService"
	_RM_REBOOT_REASON_name_3 = "RmRebootReasonDetectedSelf"
)

var (
	_RM_REBOOT_REASON_index_0 = [...]uint8{0, 18, 48, 77}
)

func (i RM_REBOOT_REASON) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _RM_REBOOT_REASON_name_0[_RM_REBOOT_REASON_index_0[i]:_RM_REBOOT_REASON_index_0[i+1]]
	case i == 4:
		return _RM_REBOOT_REASON_name_1
	case i == 8:
		return _RM_REBOOT_REASON_name_2
	case i == 16:
		return _RM_REBOOT_REASON_name_3
	default:
		return "RM_REBOOT_REASON(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
